services:
  frontend-dev:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
      args:
        - FRONTEND_PORT=${FRONTEND_PORT}
        - BACKEND_PORT=${BACKEND_PORT}
        - BACKEND_HOST=${BACKEND_HOST}
    image: vectorinstitute/health-rec:frontend-dev-${BUILD_ID}
    env_file: .env.development
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - NEXT_PUBLIC_BACKEND_HOST=${BACKEND_HOST}
      - NEXT_PUBLIC_BACKEND_PORT=${BACKEND_PORT}
      - NEXT_PUBLIC_FRONTEND_PORT=${FRONTEND_PORT}
    volumes:
      - ./ui:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    networks:
      - app-network

  backend-dev:
    build:
      context: ./health_rec
      dockerfile: Dockerfile.dev
      args:
        - BACKEND_PORT=${BACKEND_PORT}
        - FRONTEND_PORT=${FRONTEND_PORT}
    image: vectorinstitute/health-rec:backend-dev-${BUILD_ID}
    env_file: .env.development
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - CHROMA_HOST=${CHROMA_HOST}
      - CHROMA_PORT=${CHROMA_PORT}
    volumes:
      - ./health_rec:/app
    networks:
      - app-network
    depends_on:
      - chromadb

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    volumes:
      - chroma_data:/chroma/chroma
    ports:
      - "${CHROMA_PORT}:8000"
    environment:
      - ALLOW_RESET=true
    networks:
      - app-network

volumes:
  chroma_data:

networks:
  app-network:
    driver: bridge
